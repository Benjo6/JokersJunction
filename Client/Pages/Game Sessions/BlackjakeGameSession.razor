@inherits BlackjackGameSessionBase
@attribute [Authorize(Roles = "User")]
@page "/Blackjack-Game"

@if (GameInformation == null)
{
    <div class="spinner"></div>
}
else
{
    <section class="container-fluid centered-container">
        <div class="row justify-content-center">
            <div class="col">
                <div class="oval-table">
                    <div class="oval-table-center"></div>
                    <div class="oval-table-seats">
                        @foreach (var player in GameInformation.Players)
                        {
                            <div class="oval-seat" style="@($"transform: rotate({(player.SeatNumber * (360 / GameInformation.Players.Count()))}deg) translate(0, -150px)")">
                                @if (player != null)
                                {
                                    <div class="player-info">
                                        <p>@player.Username @player.GameMoney</p>
                                        <SessionPlayerInfo GameInformation="@GameInformation" GamePlayer="@player" />
                                    </div>
                                }
                                else
                                {
                                    <p>Empty seat</p>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-between fixed-bottom mb-3 mr-3">
            <div class="col-6 text-left">
                <div class="card chat-card">
                    <div class="card-header">
                        <h5 class="card-title">Chat Service</h5>
                    </div>
                    <div class="card-body overflow-auto" style="max-height: 300px;">
                        <div class="message-container">
                            @foreach (var message in ChatMessages)
                            {
                                <div class="message">
                                    <p class="message-text">@message.Sender: @message.Message</p>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="input-group">
                            <input @bind="MessageInput" class="form-control inpMsg" placeholder="Type your message here" @onkeypress="SendOnEnter">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="button" @onclick="SendMessage">Send</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 align-content-end text-right">
                @if (GameInformation.Players.FirstOrDefault(e => e.Username == AuthState.User.Identity.Name) != null &&
               !GameInformation.Players.First(e => e.Username == AuthState.User.Identity.Name).IsReady)
                {
                    <button @onclick="@MarkReady" class="btn btn-primary m-1">Join game</button>
                }
                else
                {
                    <button @onclick="@UnmarkReady" class="btn btn-primary m-1">Leave game</button>
                }
                <button @onclick="@LeaveTable" class="btn btn-danger m-1">Leave table</button>

                @if (GameInformation.GameInProgress && GameInformation.CurrentPlayer == AuthState.User.Identity.Name)
                {
                    <button @onclick="@Hit" class="btn btn-primary m-1">Hit</button>
                    <button @onclick="@Stand" class="btn btn-primary m-1">Stand</button>
                    <input @bind="@GameInformation.PlayerBet" type="number" class="form-control col-md-4 m-1" placeholder="Bet Amount">
                    <button @onclick="@Bet" class="btn btn-primary m-1">Bet</button>
                }
            </div>
        </div>
    </section>
}

<style>
    .oval-table {
        width: 600px;
        height: 300px;
        background-color: green; /* Color of the poker table */
        border-radius: 50%;
        position: relative;
        overflow: hidden;
    }

    .oval-table-center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100px;
        height: 100px;
        background-color: brown; /* Color of the center of the table */
        border-radius: 50%;
    }

    .oval-table-seats {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .oval-seat {
        position: absolute;
        top: 50%;
        left: 50%;
        transform-origin: center bottom;
        text-align: center;
    }

    .player-info {
        background-color: #fff;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .chat-card {
        width: 500px;
        height: 350px;
        background-color: rgba(20,20,20,0.2)
    }

    .card {
        margin-bottom: 10px;
    }

    .chatText {
        color: yellow;
        font-size: 14px;
    }

    .inpMsg {
        background-color: rgba(20,20,20,0.2);
    }
</style>